{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n\"use strict\";\nwindow.keyframeNames = window.keyframeNames || [];\nfunction $197cd56b15c33885$var$boardRefresh() {\n    var cells = $197cd56b15c33885$var$game.getState().flat();\n    $197cd56b15c33885$var$tds.forEach(function(td, index) {\n        if (cells[index] !== 0) {\n            td.textContent = cells[index];\n            td.className = \"field-cell\";\n            td.classList.add(\"field-cell--\".concat(cells[index]));\n        } else {\n            td.textContent = \"\";\n            td.className = \"field-cell\";\n        }\n    });\n}\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game(initialState) {\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.board = initialState || Array.from({\n            length: 4\n        }, function() {\n            return Array(4).fill(0);\n        });\n        this.score = 0;\n        this.status = \"idle\";\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var check = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"\";\n                var stateBeforeMove = this.board.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n                var stateAfterMove = this.board.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n                for(var i = 0; i < stateAfterMove.length; i++)for(var j = 0; j < stateAfterMove.length; j++){\n                    if (stateAfterMove[i][j] === 0 && stateAfterMove[i][j + 1] > 0) {\n                        stateAfterMove[i][j] = stateAfterMove[i][j + 1];\n                        stateAfterMove[i][j + 1] = 0;\n                    } else if (stateAfterMove[i][j] === 0 && stateAfterMove[i][j + 2] > 0) {\n                        stateAfterMove[i][j] = stateAfterMove[i][j + 2];\n                        stateAfterMove[i][j + 2] = 0;\n                    } else if (stateAfterMove[i][j] === 0 && stateAfterMove[i][j + 3] > 0) {\n                        stateAfterMove[i][j] = stateAfterMove[i][j + 3];\n                        stateAfterMove[i][j + 3] = 0;\n                    }\n                    if (stateAfterMove[i][j] === stateAfterMove[i][j + 1]) {\n                        stateAfterMove[i][j] = 2 * stateAfterMove[i][j];\n                        stateAfterMove[i][j + 1] = 0;\n                        if (check) this.setScore(this.score + stateAfterMove[i][j]);\n                    } else if (stateAfterMove[i][j] === stateAfterMove[i][j + 2] && stateAfterMove[i][j + 1] === 0) {\n                        stateAfterMove[i][j] = 2 * stateAfterMove[i][j];\n                        stateAfterMove[i][j + 2] = 0;\n                        if (check) this.setScore(this.score + stateAfterMove[i][j]);\n                    } else if (stateAfterMove[i][j] === stateAfterMove[i][j + 3] && stateAfterMove[i][j + 1] === 0 && stateAfterMove[i][j + 2] === 0) {\n                        stateAfterMove[i][j] = 2 * stateAfterMove[i][j];\n                        stateAfterMove[i][j + 3] = 0;\n                        if (check) this.setScore(this.score + stateAfterMove[i][j]);\n                    }\n                }\n                if (check) return this.boardsEqual(stateBeforeMove, stateAfterMove);\n                if (!this.boardsEqual(stateBeforeMove, stateAfterMove)) {\n                    this.board = stateAfterMove;\n                    this.generateTile();\n                }\n                if (this.lose()) this.setStatus(\"lose\");\n                if (this.win()) this.setStatus(\"win\");\n            }\n        },\n        {\n            key: \"canMoveLeft\",\n            value: function canMoveLeft() {\n                return this.moveLeft(\"check\");\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var check = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"\";\n                var stateBeforeMove = this.board.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n                var stateAfterMove = this.board.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n                for(var i = 0; i < stateAfterMove.length; i++)for(var j = stateAfterMove.length - 1; j >= 0; j--){\n                    if (stateAfterMove[i][j] === 0 && stateAfterMove[i][j - 1] > 0) {\n                        stateAfterMove[i][j] = stateAfterMove[i][j - 1];\n                        stateAfterMove[i][j - 1] = 0;\n                    } else if (stateAfterMove[i][j] === 0 && stateAfterMove[i][j - 2] > 0) {\n                        stateAfterMove[i][j] = stateAfterMove[i][j - 2];\n                        stateAfterMove[i][j - 2] = 0;\n                    } else if (stateAfterMove[i][j] === 0 && stateAfterMove[i][j - 3] > 0) {\n                        stateAfterMove[i][j] = stateAfterMove[i][j - 3];\n                        stateAfterMove[i][j - 3] = 0;\n                    }\n                    if (stateAfterMove[i][j] === stateAfterMove[i][j - 1]) {\n                        stateAfterMove[i][j] = 2 * stateAfterMove[i][j];\n                        stateAfterMove[i][j - 1] = 0;\n                        if (check) this.setScore(this.score + stateAfterMove[i][j]);\n                    } else if (stateAfterMove[i][j] === stateAfterMove[i][j - 2] && stateAfterMove[i][j - 1] === 0) {\n                        stateAfterMove[i][j] = 2 * stateAfterMove[i][j];\n                        stateAfterMove[i][j - 2] = 0;\n                        if (check) this.setScore(this.score + stateAfterMove[i][j]);\n                    } else if (stateAfterMove[i][j] === stateAfterMove[i][j - 3] && stateAfterMove[i][j - 1] === 0 && stateAfterMove[i][j - 2] === 0) {\n                        stateAfterMove[i][j] = 2 * stateAfterMove[i][j];\n                        stateAfterMove[i][j - 3] = 0;\n                        if (check) this.setScore(this.score + stateAfterMove[i][j]);\n                    }\n                }\n                if (check) return this.boardsEqual(stateBeforeMove, stateAfterMove);\n                if (!this.boardsEqual(stateBeforeMove, stateAfterMove)) {\n                    this.board = stateAfterMove;\n                    this.generateTile();\n                }\n                if (this.lose()) this.setStatus(\"lose\");\n                if (this.win()) this.setStatus(\"win\");\n            }\n        },\n        {\n            key: \"canMoveRight\",\n            value: function canMoveRight() {\n                return this.moveRight(\"check\");\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var check = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"\";\n                var stateBeforeMove = this.board.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n                var stateAfterMove = this.board.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n                for(var i = 0; i < stateAfterMove.length; i++)for(var j = 0; j < stateAfterMove.length; j++){\n                    if (j < stateAfterMove.length - 1 && stateAfterMove[j][i] === 0 && stateAfterMove[j + 1][i] > 0) {\n                        stateAfterMove[j][i] = stateAfterMove[j + 1][i];\n                        stateAfterMove[j + 1][i] = 0;\n                    } else if (j < stateAfterMove.length - 2 && stateAfterMove[j][i] === 0 && stateAfterMove[j + 2][i] > 0) {\n                        stateAfterMove[j][i] = stateAfterMove[j + 2][i];\n                        stateAfterMove[j + 2][i] = 0;\n                    } else if (j < stateAfterMove.length - 3 && stateAfterMove[j][i] === 0 && stateAfterMove[j + 3][i] > 0) {\n                        stateAfterMove[j][i] = stateAfterMove[j + 3][i];\n                        stateAfterMove[j + 3][i] = 0;\n                    }\n                    if (j < stateAfterMove.length - 1 && stateAfterMove[j][i] === stateAfterMove[j + 1][i]) {\n                        stateAfterMove[j][i] = 2 * stateAfterMove[j][i];\n                        stateAfterMove[j + 1][i] = 0;\n                        if (check) this.setScore(this.score + stateAfterMove[j][i]);\n                    } else if (j < stateAfterMove.length - 2 && stateAfterMove[j][i] === stateAfterMove[j + 2][i] && stateAfterMove[j + 1][i] === 0) {\n                        stateAfterMove[j][i] = 2 * stateAfterMove[j][i];\n                        stateAfterMove[j + 2][i] = 0;\n                        if (check) this.setScore(this.score + stateAfterMove[j][i]);\n                    } else if (j < stateAfterMove.length - 3 && stateAfterMove[j][i] === stateAfterMove[j + 3][i] && stateAfterMove[j + 2][i] === 0 && stateAfterMove[j + 1][i] === 0) {\n                        stateAfterMove[j][i] = 2 * stateAfterMove[j][i];\n                        stateAfterMove[j + 3][i] = 0;\n                        if (check) this.setScore(this.score + stateAfterMove[j][i]);\n                    }\n                }\n                if (check) return this.boardsEqual(stateBeforeMove, stateAfterMove);\n                if (!this.boardsEqual(stateBeforeMove, stateAfterMove)) {\n                    this.board = stateAfterMove;\n                    this.generateTile();\n                }\n                if (this.lose()) this.setStatus(\"lose\");\n                if (this.win()) this.setStatus(\"win\");\n            }\n        },\n        {\n            key: \"canMoveUp\",\n            value: function canMoveUp() {\n                return this.moveUp(\"check\");\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var check = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"\";\n                var stateBeforeMove = this.board.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n                var stateAfterMove = this.board.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n                for(var i = 0; i < stateAfterMove.length; i++)for(var j = stateAfterMove.length - 1; j >= 0; j--){\n                    if (j > 0 && stateAfterMove[j][i] === 0 && stateAfterMove[j - 1][i] > 0) {\n                        stateAfterMove[j][i] = stateAfterMove[j - 1][i];\n                        stateAfterMove[j - 1][i] = 0;\n                    } else if (j > 1 && stateAfterMove[j][i] === 0 && stateAfterMove[j - 2][i] > 0) {\n                        stateAfterMove[j][i] = stateAfterMove[j - 2][i];\n                        stateAfterMove[j - 2][i] = 0;\n                    } else if (j > 2 && stateAfterMove[j][i] === 0 && stateAfterMove[j - 3][i] > 0) {\n                        stateAfterMove[j][i] = stateAfterMove[j - 3][i];\n                        stateAfterMove[j - 3][i] = 0;\n                    }\n                    if (j > 0 && stateAfterMove[j][i] === stateAfterMove[j - 1][i]) {\n                        stateAfterMove[j][i] = 2 * stateAfterMove[j][i];\n                        stateAfterMove[j - 1][i] = 0;\n                        if (check) this.setScore(this.score + stateAfterMove[j][i]);\n                    } else if (j > 1 && stateAfterMove[j][i] === stateAfterMove[j - 2][i] && stateAfterMove[j - 1][i] === 0) {\n                        stateAfterMove[j][i] = 2 * stateAfterMove[j][i];\n                        stateAfterMove[j - 2][i] = 0;\n                        if (check) this.setScore(this.score + stateAfterMove[j][i]);\n                    } else if (j > 2 && stateAfterMove[j][i] === stateAfterMove[j - 3][i] && stateAfterMove[j - 2][i] === 0 && stateAfterMove[j - 1][i] === 0) {\n                        stateAfterMove[j][i] = 2 * stateAfterMove[j][i];\n                        stateAfterMove[j - 3][i] = 0;\n                        if (check) this.setScore(this.score + stateAfterMove[j][i]);\n                    }\n                }\n                if (check) return this.boardsEqual(stateBeforeMove, stateAfterMove);\n                if (!this.boardsEqual(stateBeforeMove, stateAfterMove)) {\n                    this.board = stateAfterMove;\n                    this.generateTile();\n                }\n                if (this.lose()) this.setStatus(\"lose\");\n                if (this.win()) this.setStatus(\"win\");\n            }\n        },\n        {\n            key: \"canMoveDown\",\n            value: function canMoveDown() {\n                return this.moveDown(\"check\");\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"setScore\",\n            value: function setScore(value) {\n                this.score = value;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.board;\n            }\n        },\n        {\n            key: \"setStatus\",\n            value: function setStatus(value) {\n                this.status = value;\n            }\n        },\n        {\n            key: \"generateTile\",\n            value: function generateTile() {\n                var count = 0;\n                while(count < 1){\n                    var chanceArray = [\n                        2,\n                        2,\n                        2,\n                        2,\n                        4,\n                        2,\n                        2,\n                        2,\n                        2,\n                        2\n                    ];\n                    var randomRow = this.getRandomNum(0, 3);\n                    var randomColumn = this.getRandomNum(0, 3);\n                    if (this.board[randomRow][randomColumn] === 0) {\n                        this.board[randomRow][randomColumn] = chanceArray[this.getRandomNum(0, 9)];\n                        count++;\n                    }\n                }\n            }\n        },\n        {\n            key: \"boardsEqual\",\n            value: function boardsEqual(a, b) {\n                return a.every(function(row, i) {\n                    return row.every(function(val, j) {\n                        return val === b[i][j];\n                    });\n                });\n            }\n        },\n        {\n            key: \"lose\",\n            value: function lose() {\n                return this.canMoveLeft() && this.canMoveRight() && this.canMoveUp() && this.canMoveDown();\n            }\n        },\n        {\n            key: \"win\",\n            value: function win() {\n                return this.board.flat().some(function(item) {\n                    return item === 2048;\n                });\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"getRandomNum\",\n            value: function getRandomNum(minNum, maxNum) {\n                return Math.floor(Math.random() * (maxNum - minNum + 1)) + minNum;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.setStatus(\"playing\");\n                this.generateTile();\n                this.generateTile();\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.setStatus(\"idle\");\n                var resetedBoard = Array.from({\n                    length: 4\n                }, function() {\n                    return Array(4).fill(0);\n                });\n                this.board = resetedBoard;\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$clickButton = document.querySelector(\"button\");\nvar $197cd56b15c33885$var$score = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$startMessage = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$lostMessage = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$winMessage = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$tds = Array.from(document.querySelectorAll(\"td\"));\nvar $197cd56b15c33885$var$field = document.querySelector(\".game-field\");\nvar $197cd56b15c33885$var$gameOverMessage = document.querySelector(\".game-over\");\nvar $197cd56b15c33885$var$styleSheet = document.styleSheets[0];\n$197cd56b15c33885$var$clickButton.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$game.getStatus() === \"idle\") {\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$boardRefresh();\n        $197cd56b15c33885$var$startMessage.classList.add(\"hidden\");\n        $197cd56b15c33885$var$clickButton.classList.remove(\"start\");\n        $197cd56b15c33885$var$clickButton.classList.add(\"restart\");\n        $197cd56b15c33885$var$clickButton.textContent = \"Restart\";\n    } else {\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$boardRefresh();\n        $197cd56b15c33885$var$game.setScore(0);\n        $197cd56b15c33885$var$score.textContent = $197cd56b15c33885$var$game.getScore();\n        $197cd56b15c33885$var$startMessage.classList.remove(\"hidden\");\n        $197cd56b15c33885$var$lostMessage.classList.add(\"hidden\");\n        $197cd56b15c33885$var$field.classList.remove(\"game-field--lose\");\n        $197cd56b15c33885$var$gameOverMessage.classList.remove(\"game-over--visible\");\n        $197cd56b15c33885$var$clickButton.classList.remove(\"restart\");\n        $197cd56b15c33885$var$clickButton.classList.add(\"start\");\n        $197cd56b15c33885$var$clickButton.textContent = \"Start\";\n        $197cd56b15c33885$var$tds.forEach(function(item) {\n            item.style.animationName = \"\";\n        });\n        for(var i = $197cd56b15c33885$var$styleSheet.cssRules.length - 1; i >= 0; i--){\n            var rule = $197cd56b15c33885$var$styleSheet.cssRules[i];\n            if (rule.type === CSSRule.KEYFRAMES_RULE && window.keyframeNames.includes(rule.name)) $197cd56b15c33885$var$styleSheet.deleteRule(i);\n        }\n    }\n});\ndocument.addEventListener(\"keydown\", function(e) {\n    if ($197cd56b15c33885$var$game.getStatus() === \"playing\") {\n        if (e.key === \"ArrowUp\") {\n            $197cd56b15c33885$var$game.moveUp();\n            $197cd56b15c33885$var$boardRefresh();\n            $197cd56b15c33885$var$score.textContent = $197cd56b15c33885$var$game.getScore();\n        }\n        if (e.key === \"ArrowDown\") {\n            $197cd56b15c33885$var$game.moveDown();\n            $197cd56b15c33885$var$boardRefresh();\n            $197cd56b15c33885$var$score.textContent = $197cd56b15c33885$var$game.getScore();\n        }\n        if (e.key === \"ArrowLeft\") {\n            $197cd56b15c33885$var$game.moveLeft();\n            $197cd56b15c33885$var$boardRefresh();\n            $197cd56b15c33885$var$score.textContent = $197cd56b15c33885$var$game.getScore();\n        }\n        if (e.key === \"ArrowRight\") {\n            $197cd56b15c33885$var$game.moveRight();\n            $197cd56b15c33885$var$boardRefresh();\n            $197cd56b15c33885$var$score.textContent = $197cd56b15c33885$var$game.getScore();\n        }\n    }\n    if ($197cd56b15c33885$var$game.getStatus() === \"lose\") {\n        $197cd56b15c33885$var$field.classList.add(\"game-field--lose\");\n        $197cd56b15c33885$var$lostMessage.classList.remove(\"hidden\");\n        $197cd56b15c33885$var$gameOverMessage.classList.add(\"game-over--visible\");\n        $197cd56b15c33885$var$tds.forEach(function(item, index) {\n            var title = \"shake-\".concat(index);\n            var keyframes = \"@keyframes \".concat(title, \" {\");\n            for(var i = 0; i <= 80; i++){\n                var rot = (i % 2 === 0 ? 2 : -2) * (i % 4 < 2 ? 1 : -1);\n                var tx = (i % 2 === 0 ? 2 : -2) * (i % 4 < 2 ? 1 : -1);\n                keyframes += \"\".concat(i, \"% { transform: rotate(\").concat(rot, \"deg)\\n        translateX(\").concat(tx, \"px) scale(1); }\");\n            }\n            var randX = (Math.random() - 0.5) * 1000;\n            var randY = (Math.random() - 0.5) * 1000;\n            var rotEnd = (Math.random() - 0.5) * 1440;\n            keyframes += \"\\n        80% { transform: rotate(0deg) translate(0,0); opacity: 1 }\\n        100% { transform: rotate(\".concat(rotEnd, \"deg) translate(\").concat(randX, \"px,\\n        \").concat(randY, \"px); opacity: 0;}\\n      \");\n            keyframes += \"}\";\n            $197cd56b15c33885$var$styleSheet.insertRule(keyframes, $197cd56b15c33885$var$styleSheet.cssRules.length);\n            item.style.animationName = title;\n            item.style.animationDelay = \"\".concat(Math.random() * 0.2, \"s\");\n            item.style.animationDuration = \"\".concat(1.5 + Math.random(), \"s\");\n            item.style.animationFillMode = \"forwards\";\n        });\n        $197cd56b15c33885$var$lostMessage.addEventListener(\"click\", function() {\n            $197cd56b15c33885$var$game.restart();\n            $197cd56b15c33885$var$boardRefresh();\n            $197cd56b15c33885$var$game.setScore(0);\n            $197cd56b15c33885$var$score.textContent = $197cd56b15c33885$var$game.getScore();\n            $197cd56b15c33885$var$startMessage.classList.remove(\"hidden\");\n            $197cd56b15c33885$var$lostMessage.classList.add(\"hidden\");\n            $197cd56b15c33885$var$field.classList.remove(\"game-field--lose\");\n            $197cd56b15c33885$var$gameOverMessage.classList.remove(\"game-over--visible\");\n            $197cd56b15c33885$var$clickButton.classList.remove(\"restart\");\n            $197cd56b15c33885$var$clickButton.classList.add(\"start\");\n            $197cd56b15c33885$var$clickButton.textContent = \"Start\";\n            $197cd56b15c33885$var$tds.forEach(function(item) {\n                item.style.animationName = \"\";\n            });\n            for(var i = $197cd56b15c33885$var$styleSheet.cssRules.length - 1; i >= 0; i--){\n                var rule = $197cd56b15c33885$var$styleSheet.cssRules[i];\n                if (rule.type === CSSRule.KEYFRAMES_RULE && window.keyframeNames.includes(rule.name)) $197cd56b15c33885$var$styleSheet.deleteRule(i);\n            }\n        });\n    }\n    if ($197cd56b15c33885$var$game.getStatus() === \"win\") {\n        $197cd56b15c33885$var$winMessage.classList.remove(\"hidden\");\n        $197cd56b15c33885$var$winMessage.addEventListener(\"click\", function() {\n            $197cd56b15c33885$var$game.restart();\n            $197cd56b15c33885$var$boardRefresh();\n            $197cd56b15c33885$var$game.setScore(0);\n            $197cd56b15c33885$var$score.textContent = $197cd56b15c33885$var$game.getScore();\n            $197cd56b15c33885$var$startMessage.classList.remove(\"hidden\");\n            $197cd56b15c33885$var$winMessage.classList.add(\"hidden\");\n            $197cd56b15c33885$var$clickButton.classList.remove(\"restart\");\n            $197cd56b15c33885$var$clickButton.classList.add(\"start\");\n            $197cd56b15c33885$var$clickButton.textContent = \"Start\";\n        });\n    }\n});\n\n})();\n//# sourceMappingURL=index.04e528fd.js.map\n","'use strict';\n\nwindow.keyframeNames = window.keyframeNames || [];\n\nfunction boardRefresh() {\n  const cells = game.getState().flat();\n\n  tds.forEach((td, index) => {\n    if (cells[index] !== 0) {\n      td.textContent = cells[index];\n      td.className = 'field-cell';\n      td.classList.add(`field-cell--${cells[index]}`);\n    } else {\n      td.textContent = '';\n      td.className = 'field-cell';\n    }\n  });\n}\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\nconst clickButton = document.querySelector('button');\nconst score = document.querySelector('.game-score');\nconst startMessage = document.querySelector('.message-start');\nconst lostMessage = document.querySelector('.message-lose');\nconst winMessage = document.querySelector('.message-win');\nconst tds = Array.from(document.querySelectorAll('td'));\nconst field = document.querySelector('.game-field');\nconst gameOverMessage = document.querySelector('.game-over');\nconst styleSheet = document.styleSheets[0];\n\nclickButton.addEventListener('click', () => {\n  if (game.getStatus() === 'idle') {\n    game.start();\n    boardRefresh();\n    startMessage.classList.add('hidden');\n\n    clickButton.classList.remove('start');\n    clickButton.classList.add('restart');\n    clickButton.textContent = 'Restart';\n  } else {\n    game.restart();\n    boardRefresh();\n    game.setScore(0);\n    score.textContent = game.getScore();\n    startMessage.classList.remove('hidden');\n    lostMessage.classList.add('hidden');\n    field.classList.remove('game-field--lose');\n    gameOverMessage.classList.remove('game-over--visible');\n\n    clickButton.classList.remove('restart');\n    clickButton.classList.add('start');\n    clickButton.textContent = 'Start';\n\n    tds.forEach((item) => {\n      item.style.animationName = '';\n    });\n\n    for (let i = styleSheet.cssRules.length - 1; i >= 0; i--) {\n      const rule = styleSheet.cssRules[i];\n\n      if (\n        rule.type === CSSRule.KEYFRAMES_RULE\n        && window.keyframeNames.includes(rule.name)\n      ) {\n        styleSheet.deleteRule(i);\n      }\n    }\n  }\n});\n\ndocument.addEventListener('keydown', (e) => {\n  if (game.getStatus() === 'playing') {\n    if (e.key === 'ArrowUp') {\n      game.moveUp();\n      boardRefresh();\n      score.textContent = game.getScore();\n    }\n\n    if (e.key === 'ArrowDown') {\n      game.moveDown();\n      boardRefresh();\n      score.textContent = game.getScore();\n    }\n\n    if (e.key === 'ArrowLeft') {\n      game.moveLeft();\n      boardRefresh();\n      score.textContent = game.getScore();\n    }\n\n    if (e.key === 'ArrowRight') {\n      game.moveRight();\n      boardRefresh();\n      score.textContent = game.getScore();\n    }\n  }\n\n  if (game.getStatus() === 'lose') {\n    field.classList.add('game-field--lose');\n    lostMessage.classList.remove('hidden');\n\n    gameOverMessage.classList.add('game-over--visible');\n\n    tds.forEach((item, index) => {\n      const title = `shake-${index}`;\n\n      let keyframes = `@keyframes ${title} {`;\n\n      for (let i = 0; i <= 80; i++) {\n        const rot = (i % 2 === 0 ? 2 : -2) * (i % 4 < 2 ? 1 : -1);\n        const tx = (i % 2 === 0 ? 2 : -2) * (i % 4 < 2 ? 1 : -1);\n\n        keyframes += `${i}% { transform: rotate(${rot}deg)\n        translateX(${tx}px) scale(1); }`;\n      }\n\n      const randX = (Math.random() - 0.5) * 1000;\n      const randY = (Math.random() - 0.5) * 1000;\n      const rotEnd = (Math.random() - 0.5) * 1440;\n\n      keyframes += `\n        80% { transform: rotate(0deg) translate(0,0); opacity: 1 }\n        100% { transform: rotate(${rotEnd}deg) translate(${randX}px,\n        ${randY}px); opacity: 0;}\n      `;\n\n      keyframes += `}`;\n\n      styleSheet.insertRule(keyframes, styleSheet.cssRules.length);\n      item.style.animationName = title;\n      item.style.animationDelay = `${Math.random() * 0.2}s`;\n      item.style.animationDuration = `${1.5 + Math.random()}s`;\n      item.style.animationFillMode = 'forwards';\n    });\n\n    lostMessage.addEventListener('click', () => {\n      game.restart();\n      boardRefresh();\n      game.setScore(0);\n      score.textContent = game.getScore();\n      startMessage.classList.remove('hidden');\n      lostMessage.classList.add('hidden');\n      field.classList.remove('game-field--lose');\n      gameOverMessage.classList.remove('game-over--visible');\n\n      clickButton.classList.remove('restart');\n      clickButton.classList.add('start');\n      clickButton.textContent = 'Start';\n\n      tds.forEach((item) => {\n        item.style.animationName = '';\n      });\n\n      for (let i = styleSheet.cssRules.length - 1; i >= 0; i--) {\n        const rule = styleSheet.cssRules[i];\n\n        if (\n          rule.type === CSSRule.KEYFRAMES_RULE\n          && window.keyframeNames.includes(rule.name)\n        ) {\n          styleSheet.deleteRule(i);\n        }\n      }\n    });\n  }\n\n  if (game.getStatus() === 'win') {\n    winMessage.classList.remove('hidden');\n\n    winMessage.addEventListener('click', () => {\n      game.restart();\n      boardRefresh();\n      game.setScore(0);\n      score.textContent = game.getScore();\n      startMessage.classList.remove('hidden');\n      winMessage.classList.add('hidden');\n\n      clickButton.classList.remove('restart');\n      clickButton.classList.add('start');\n      clickButton.textContent = 'Start';\n    });\n  }\n});\n","'use strict';\nclass Game {\n  constructor(initialState) {\n    this.board\n      = initialState || Array.from({ length: 4 }, () => Array(4).fill(0));\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  moveLeft(check = '') {\n    const stateBeforeMove = this.board.map((row) => [...row]);\n    const stateAfterMove = this.board.map((row) => [...row]);\n\n    for (let i = 0; i < stateAfterMove.length; i++) {\n      for (let j = 0; j < stateAfterMove.length; j++) {\n        if (stateAfterMove[i][j] === 0 && stateAfterMove[i][j + 1] > 0) {\n          stateAfterMove[i][j] = stateAfterMove[i][j + 1];\n          stateAfterMove[i][j + 1] = 0;\n        } else if (stateAfterMove[i][j] === 0 && stateAfterMove[i][j + 2] > 0) {\n          stateAfterMove[i][j] = stateAfterMove[i][j + 2];\n          stateAfterMove[i][j + 2] = 0;\n        } else if (stateAfterMove[i][j] === 0 && stateAfterMove[i][j + 3] > 0) {\n          stateAfterMove[i][j] = stateAfterMove[i][j + 3];\n          stateAfterMove[i][j + 3] = 0;\n        }\n\n        if (stateAfterMove[i][j] === stateAfterMove[i][j + 1]) {\n          stateAfterMove[i][j] = 2 * stateAfterMove[i][j];\n          stateAfterMove[i][j + 1] = 0;\n\n          if (check) {\n            this.setScore(this.score + stateAfterMove[i][j]);\n          }\n        } else if (\n          stateAfterMove[i][j] === stateAfterMove[i][j + 2]\n          && stateAfterMove[i][j + 1] === 0\n        ) {\n          stateAfterMove[i][j] = 2 * stateAfterMove[i][j];\n          stateAfterMove[i][j + 2] = 0;\n\n          if (check) {\n            this.setScore(this.score + stateAfterMove[i][j]);\n          }\n        } else if (\n          stateAfterMove[i][j] === stateAfterMove[i][j + 3]\n          && stateAfterMove[i][j + 1] === 0\n          && stateAfterMove[i][j + 2] === 0\n        ) {\n          stateAfterMove[i][j] = 2 * stateAfterMove[i][j];\n          stateAfterMove[i][j + 3] = 0;\n\n          if (check) {\n            this.setScore(this.score + stateAfterMove[i][j]);\n          }\n        }\n      }\n    }\n\n    if (check) {\n      return this.boardsEqual(stateBeforeMove, stateAfterMove);\n    }\n\n    if (!this.boardsEqual(stateBeforeMove, stateAfterMove)) {\n      this.board = stateAfterMove;\n      this.generateTile();\n    }\n\n    if (this.lose()) {\n      this.setStatus('lose');\n    }\n\n    if (this.win()) {\n      this.setStatus('win');\n    }\n  }\n\n  canMoveLeft() {\n    return this.moveLeft('check');\n  }\n\n  moveRight(check = '') {\n    const stateBeforeMove = this.board.map((row) => [...row]);\n    const stateAfterMove = this.board.map((row) => [...row]);\n\n    for (let i = 0; i < stateAfterMove.length; i++) {\n      for (let j = stateAfterMove.length - 1; j >= 0; j--) {\n        if (stateAfterMove[i][j] === 0 && stateAfterMove[i][j - 1] > 0) {\n          stateAfterMove[i][j] = stateAfterMove[i][j - 1];\n          stateAfterMove[i][j - 1] = 0;\n        } else if (stateAfterMove[i][j] === 0 && stateAfterMove[i][j - 2] > 0) {\n          stateAfterMove[i][j] = stateAfterMove[i][j - 2];\n          stateAfterMove[i][j - 2] = 0;\n        } else if (stateAfterMove[i][j] === 0 && stateAfterMove[i][j - 3] > 0) {\n          stateAfterMove[i][j] = stateAfterMove[i][j - 3];\n          stateAfterMove[i][j - 3] = 0;\n        }\n\n        if (stateAfterMove[i][j] === stateAfterMove[i][j - 1]) {\n          stateAfterMove[i][j] = 2 * stateAfterMove[i][j];\n          stateAfterMove[i][j - 1] = 0;\n\n          if (check) {\n            this.setScore(this.score + stateAfterMove[i][j]);\n          }\n        } else if (\n          stateAfterMove[i][j] === stateAfterMove[i][j - 2]\n          && stateAfterMove[i][j - 1] === 0\n        ) {\n          stateAfterMove[i][j] = 2 * stateAfterMove[i][j];\n          stateAfterMove[i][j - 2] = 0;\n\n          if (check) {\n            this.setScore(this.score + stateAfterMove[i][j]);\n          }\n        } else if (\n          stateAfterMove[i][j] === stateAfterMove[i][j - 3]\n          && stateAfterMove[i][j - 1] === 0\n          && stateAfterMove[i][j - 2] === 0\n        ) {\n          stateAfterMove[i][j] = 2 * stateAfterMove[i][j];\n          stateAfterMove[i][j - 3] = 0;\n\n          if (check) {\n            this.setScore(this.score + stateAfterMove[i][j]);\n          }\n        }\n      }\n    }\n\n    if (check) {\n      return this.boardsEqual(stateBeforeMove, stateAfterMove);\n    }\n\n    if (!this.boardsEqual(stateBeforeMove, stateAfterMove)) {\n      this.board = stateAfterMove;\n      this.generateTile();\n    }\n\n    if (this.lose()) {\n      this.setStatus('lose');\n    }\n\n    if (this.win()) {\n      this.setStatus('win');\n    }\n  }\n\n  canMoveRight() {\n    return this.moveRight('check');\n  }\n\n  moveUp(check = '') {\n    const stateBeforeMove = this.board.map((row) => [...row]);\n    const stateAfterMove = this.board.map((row) => [...row]);\n\n    for (let i = 0; i < stateAfterMove.length; i++) {\n      for (let j = 0; j < stateAfterMove.length; j++) {\n        if (\n          j < stateAfterMove.length - 1\n          && stateAfterMove[j][i] === 0\n          && stateAfterMove[j + 1][i] > 0\n        ) {\n          stateAfterMove[j][i] = stateAfterMove[j + 1][i];\n          stateAfterMove[j + 1][i] = 0;\n        } else if (\n          j < stateAfterMove.length - 2\n          && stateAfterMove[j][i] === 0\n          && stateAfterMove[j + 2][i] > 0\n        ) {\n          stateAfterMove[j][i] = stateAfterMove[j + 2][i];\n          stateAfterMove[j + 2][i] = 0;\n        } else if (\n          j < stateAfterMove.length - 3\n          && stateAfterMove[j][i] === 0\n          && stateAfterMove[j + 3][i] > 0\n        ) {\n          stateAfterMove[j][i] = stateAfterMove[j + 3][i];\n          stateAfterMove[j + 3][i] = 0;\n        }\n\n        if (\n          j < stateAfterMove.length - 1\n          && stateAfterMove[j][i] === stateAfterMove[j + 1][i]\n        ) {\n          stateAfterMove[j][i] = 2 * stateAfterMove[j][i];\n          stateAfterMove[j + 1][i] = 0;\n\n          if (check) {\n            this.setScore(this.score + stateAfterMove[j][i]);\n          }\n        } else if (\n          j < stateAfterMove.length - 2\n          && stateAfterMove[j][i] === stateAfterMove[j + 2][i]\n          && stateAfterMove[j + 1][i] === 0\n        ) {\n          stateAfterMove[j][i] = 2 * stateAfterMove[j][i];\n          stateAfterMove[j + 2][i] = 0;\n\n          if (check) {\n            this.setScore(this.score + stateAfterMove[j][i]);\n          }\n        } else if (\n          j < stateAfterMove.length - 3\n          && stateAfterMove[j][i] === stateAfterMove[j + 3][i]\n          && stateAfterMove[j + 2][i] === 0\n          && stateAfterMove[j + 1][i] === 0\n        ) {\n          stateAfterMove[j][i] = 2 * stateAfterMove[j][i];\n          stateAfterMove[j + 3][i] = 0;\n\n          if (check) {\n            this.setScore(this.score + stateAfterMove[j][i]);\n          }\n        }\n      }\n    }\n\n    if (check) {\n      return this.boardsEqual(stateBeforeMove, stateAfterMove);\n    }\n\n    if (!this.boardsEqual(stateBeforeMove, stateAfterMove)) {\n      this.board = stateAfterMove;\n      this.generateTile();\n    }\n\n    if (this.lose()) {\n      this.setStatus('lose');\n    }\n\n    if (this.win()) {\n      this.setStatus('win');\n    }\n  }\n\n  canMoveUp() {\n    return this.moveUp('check');\n  }\n\n  moveDown(check = '') {\n    const stateBeforeMove = this.board.map((row) => [...row]);\n    const stateAfterMove = this.board.map((row) => [...row]);\n\n    for (let i = 0; i < stateAfterMove.length; i++) {\n      for (let j = stateAfterMove.length - 1; j >= 0; j--) {\n        if (\n          j > 0\n          && stateAfterMove[j][i] === 0\n          && stateAfterMove[j - 1][i] > 0\n        ) {\n          stateAfterMove[j][i] = stateAfterMove[j - 1][i];\n          stateAfterMove[j - 1][i] = 0;\n        } else if (\n          j > 1\n          && stateAfterMove[j][i] === 0\n          && stateAfterMove[j - 2][i] > 0\n        ) {\n          stateAfterMove[j][i] = stateAfterMove[j - 2][i];\n          stateAfterMove[j - 2][i] = 0;\n        } else if (\n          j > 2\n          && stateAfterMove[j][i] === 0\n          && stateAfterMove[j - 3][i] > 0\n        ) {\n          stateAfterMove[j][i] = stateAfterMove[j - 3][i];\n          stateAfterMove[j - 3][i] = 0;\n        }\n\n        if (j > 0 && stateAfterMove[j][i] === stateAfterMove[j - 1][i]) {\n          stateAfterMove[j][i] = 2 * stateAfterMove[j][i];\n          stateAfterMove[j - 1][i] = 0;\n\n          if (check) {\n            this.setScore(this.score + stateAfterMove[j][i]);\n          }\n        } else if (\n          j > 1\n          && stateAfterMove[j][i] === stateAfterMove[j - 2][i]\n          && stateAfterMove[j - 1][i] === 0\n        ) {\n          stateAfterMove[j][i] = 2 * stateAfterMove[j][i];\n          stateAfterMove[j - 2][i] = 0;\n\n          if (check) {\n            this.setScore(this.score + stateAfterMove[j][i]);\n          }\n        } else if (\n          j > 2\n          && stateAfterMove[j][i] === stateAfterMove[j - 3][i]\n          && stateAfterMove[j - 2][i] === 0\n          && stateAfterMove[j - 1][i] === 0\n        ) {\n          stateAfterMove[j][i] = 2 * stateAfterMove[j][i];\n          stateAfterMove[j - 3][i] = 0;\n\n          if (check) {\n            this.setScore(this.score + stateAfterMove[j][i]);\n          }\n        }\n      }\n    }\n\n    if (check) {\n      return this.boardsEqual(stateBeforeMove, stateAfterMove);\n    }\n\n    if (!this.boardsEqual(stateBeforeMove, stateAfterMove)) {\n      this.board = stateAfterMove;\n      this.generateTile();\n    }\n\n    if (this.lose()) {\n      this.setStatus('lose');\n    }\n\n    if (this.win()) {\n      this.setStatus('win');\n    }\n  }\n\n  canMoveDown() {\n    return this.moveDown('check');\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  setScore(value) {\n    this.score = value;\n  }\n\n  getState() {\n    return this.board;\n  }\n\n  setStatus(value) {\n    this.status = value;\n  }\n\n  generateTile() {\n    let count = 0;\n\n    while (count < 1) {\n      const chanceArray = [2, 2, 2, 2, 4, 2, 2, 2, 2, 2];\n      const randomRow = this.getRandomNum(0, 3);\n      const randomColumn = this.getRandomNum(0, 3);\n\n      if (this.board[randomRow][randomColumn] === 0) {\n        this.board[randomRow][randomColumn]\n          = chanceArray[this.getRandomNum(0, 9)];\n        count++;\n      }\n    }\n  }\n\n  boardsEqual(a, b) {\n    return a.every((row, i) => row.every((val, j) => val === b[i][j]));\n  }\n\n  lose() {\n    return (\n      this.canMoveLeft()\n      && this.canMoveRight()\n      && this.canMoveUp()\n      && this.canMoveDown()\n    );\n  }\n\n  win() {\n    return this.board.flat().some((item) => item === 2048);\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  getRandomNum(minNum, maxNum) {\n    return Math.floor(Math.random() * (maxNum - minNum + 1)) + minNum;\n  }\n\n  start() {\n    this.setStatus('playing');\n    this.generateTile();\n    this.generateTile();\n  }\n\n  restart() {\n    this.setStatus('idle');\n\n    const resetedBoard = Array.from({ length: 4 }, () => Array(4).fill(0));\n\n    this.board = resetedBoard;\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["$197cd56b15c33885$var$boardRefresh","cells","$197cd56b15c33885$var$game","getState","flat","$197cd56b15c33885$var$tds","forEach","td","index","textContent","className","classList","add","concat","window","keyframeNames","$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","protoProps","Game","initialState","instance","Constructor","board","fill","score","status","key","value","check","arguments","stateBeforeMove","map","row","stateAfterMove","j","setScore","boardsEqual","generateTile","lose","setStatus","win","moveLeft","moveRight","moveUp","moveDown","count","chanceArray","randomRow","getRandomNum","randomColumn","a","b","every","val","canMoveLeft","canMoveRight","canMoveUp","canMoveDown","some","item","minNum","maxNum","Math","floor","random","resetedBoard","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","$197cd56b15c33885$var$clickButton","document","querySelector","$197cd56b15c33885$var$score","$197cd56b15c33885$var$startMessage","$197cd56b15c33885$var$lostMessage","$197cd56b15c33885$var$winMessage","querySelectorAll","$197cd56b15c33885$var$field","$197cd56b15c33885$var$gameOverMessage","$197cd56b15c33885$var$styleSheet","styleSheets","addEventListener","getStatus","start","remove","restart","getScore","style","animationName","cssRules","rule","type","CSSRule","KEYFRAMES_RULE","includes","deleteRule","e","title","keyframes","rot","tx","randX","randY","rotEnd","insertRule","animationDelay","animationDuration","animationFillMode"],"version":3,"file":"index.04e528fd.js.map"}