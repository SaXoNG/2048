{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js"],"sourcesContent":["\"use strict\";\nwindow.keyframeNames = window.keyframeNames || [];\nfunction $09e991522ca7e64e$var$boardRefresh() {\n    const cells = $09e991522ca7e64e$var$game.getState().flat();\n    $09e991522ca7e64e$var$tds.forEach((td, index)=>{\n        if (cells[index] !== 0) {\n            td.textContent = cells[index];\n            td.className = \"field-cell\";\n            td.classList.add(`field-cell--${cells[index]}`);\n        } else {\n            td.textContent = \"\";\n            td.className = \"field-cell\";\n        }\n    });\n}\nvar $a5fd07fa01589658$exports = {};\n\"use strict\";\nclass $a5fd07fa01589658$var$Game {\n    constructor(initialState){\n        this.board = initialState || Array.from({\n            length: 4\n        }, ()=>Array(4).fill(0));\n        this.score = 0;\n        this.status = \"idle\";\n    }\n    moveLeft(check = \"\") {\n        const stateBeforeMove = this.board.map((row)=>[\n                ...row\n            ]);\n        const stateAfterMove = this.board.map((row)=>[\n                ...row\n            ]);\n        for(let i = 0; i < stateAfterMove.length; i++)for(let j = 0; j < stateAfterMove.length; j++){\n            if (stateAfterMove[i][j] === 0 && stateAfterMove[i][j + 1] > 0) {\n                stateAfterMove[i][j] = stateAfterMove[i][j + 1];\n                stateAfterMove[i][j + 1] = 0;\n            } else if (stateAfterMove[i][j] === 0 && stateAfterMove[i][j + 2] > 0) {\n                stateAfterMove[i][j] = stateAfterMove[i][j + 2];\n                stateAfterMove[i][j + 2] = 0;\n            } else if (stateAfterMove[i][j] === 0 && stateAfterMove[i][j + 3] > 0) {\n                stateAfterMove[i][j] = stateAfterMove[i][j + 3];\n                stateAfterMove[i][j + 3] = 0;\n            }\n            if (stateAfterMove[i][j] === stateAfterMove[i][j + 1]) {\n                stateAfterMove[i][j] = 2 * stateAfterMove[i][j];\n                stateAfterMove[i][j + 1] = 0;\n                if (check) this.setScore(this.score + stateAfterMove[i][j]);\n            } else if (stateAfterMove[i][j] === stateAfterMove[i][j + 2] && stateAfterMove[i][j + 1] === 0) {\n                stateAfterMove[i][j] = 2 * stateAfterMove[i][j];\n                stateAfterMove[i][j + 2] = 0;\n                if (check) this.setScore(this.score + stateAfterMove[i][j]);\n            } else if (stateAfterMove[i][j] === stateAfterMove[i][j + 3] && stateAfterMove[i][j + 1] === 0 && stateAfterMove[i][j + 2] === 0) {\n                stateAfterMove[i][j] = 2 * stateAfterMove[i][j];\n                stateAfterMove[i][j + 3] = 0;\n                if (check) this.setScore(this.score + stateAfterMove[i][j]);\n            }\n        }\n        if (check) return this.boardsEqual(stateBeforeMove, stateAfterMove);\n        if (!this.boardsEqual(stateBeforeMove, stateAfterMove)) {\n            this.board = stateAfterMove;\n            this.generateTile();\n        }\n        if (this.lose()) this.setStatus(\"lose\");\n        if (this.win()) this.setStatus(\"win\");\n    }\n    canMoveLeft() {\n        return this.moveLeft(\"check\");\n    }\n    moveRight(check = \"\") {\n        const stateBeforeMove = this.board.map((row)=>[\n                ...row\n            ]);\n        const stateAfterMove = this.board.map((row)=>[\n                ...row\n            ]);\n        for(let i = 0; i < stateAfterMove.length; i++)for(let j = stateAfterMove.length - 1; j >= 0; j--){\n            if (stateAfterMove[i][j] === 0 && stateAfterMove[i][j - 1] > 0) {\n                stateAfterMove[i][j] = stateAfterMove[i][j - 1];\n                stateAfterMove[i][j - 1] = 0;\n            } else if (stateAfterMove[i][j] === 0 && stateAfterMove[i][j - 2] > 0) {\n                stateAfterMove[i][j] = stateAfterMove[i][j - 2];\n                stateAfterMove[i][j - 2] = 0;\n            } else if (stateAfterMove[i][j] === 0 && stateAfterMove[i][j - 3] > 0) {\n                stateAfterMove[i][j] = stateAfterMove[i][j - 3];\n                stateAfterMove[i][j - 3] = 0;\n            }\n            if (stateAfterMove[i][j] === stateAfterMove[i][j - 1]) {\n                stateAfterMove[i][j] = 2 * stateAfterMove[i][j];\n                stateAfterMove[i][j - 1] = 0;\n                if (check) this.setScore(this.score + stateAfterMove[i][j]);\n            } else if (stateAfterMove[i][j] === stateAfterMove[i][j - 2] && stateAfterMove[i][j - 1] === 0) {\n                stateAfterMove[i][j] = 2 * stateAfterMove[i][j];\n                stateAfterMove[i][j - 2] = 0;\n                if (check) this.setScore(this.score + stateAfterMove[i][j]);\n            } else if (stateAfterMove[i][j] === stateAfterMove[i][j - 3] && stateAfterMove[i][j - 1] === 0 && stateAfterMove[i][j - 2] === 0) {\n                stateAfterMove[i][j] = 2 * stateAfterMove[i][j];\n                stateAfterMove[i][j - 3] = 0;\n                if (check) this.setScore(this.score + stateAfterMove[i][j]);\n            }\n        }\n        if (check) return this.boardsEqual(stateBeforeMove, stateAfterMove);\n        if (!this.boardsEqual(stateBeforeMove, stateAfterMove)) {\n            this.board = stateAfterMove;\n            this.generateTile();\n        }\n        if (this.lose()) this.setStatus(\"lose\");\n        if (this.win()) this.setStatus(\"win\");\n    }\n    canMoveRight() {\n        return this.moveRight(\"check\");\n    }\n    moveUp(check = \"\") {\n        const stateBeforeMove = this.board.map((row)=>[\n                ...row\n            ]);\n        const stateAfterMove = this.board.map((row)=>[\n                ...row\n            ]);\n        for(let i = 0; i < stateAfterMove.length; i++)for(let j = 0; j < stateAfterMove.length; j++){\n            if (j < stateAfterMove.length - 1 && stateAfterMove[j][i] === 0 && stateAfterMove[j + 1][i] > 0) {\n                stateAfterMove[j][i] = stateAfterMove[j + 1][i];\n                stateAfterMove[j + 1][i] = 0;\n            } else if (j < stateAfterMove.length - 2 && stateAfterMove[j][i] === 0 && stateAfterMove[j + 2][i] > 0) {\n                stateAfterMove[j][i] = stateAfterMove[j + 2][i];\n                stateAfterMove[j + 2][i] = 0;\n            } else if (j < stateAfterMove.length - 3 && stateAfterMove[j][i] === 0 && stateAfterMove[j + 3][i] > 0) {\n                stateAfterMove[j][i] = stateAfterMove[j + 3][i];\n                stateAfterMove[j + 3][i] = 0;\n            }\n            if (j < stateAfterMove.length - 1 && stateAfterMove[j][i] === stateAfterMove[j + 1][i]) {\n                stateAfterMove[j][i] = 2 * stateAfterMove[j][i];\n                stateAfterMove[j + 1][i] = 0;\n                if (check) this.setScore(this.score + stateAfterMove[j][i]);\n            } else if (j < stateAfterMove.length - 2 && stateAfterMove[j][i] === stateAfterMove[j + 2][i] && stateAfterMove[j + 1][i] === 0) {\n                stateAfterMove[j][i] = 2 * stateAfterMove[j][i];\n                stateAfterMove[j + 2][i] = 0;\n                if (check) this.setScore(this.score + stateAfterMove[j][i]);\n            } else if (j < stateAfterMove.length - 3 && stateAfterMove[j][i] === stateAfterMove[j + 3][i] && stateAfterMove[j + 2][i] === 0 && stateAfterMove[j + 1][i] === 0) {\n                stateAfterMove[j][i] = 2 * stateAfterMove[j][i];\n                stateAfterMove[j + 3][i] = 0;\n                if (check) this.setScore(this.score + stateAfterMove[j][i]);\n            }\n        }\n        if (check) return this.boardsEqual(stateBeforeMove, stateAfterMove);\n        if (!this.boardsEqual(stateBeforeMove, stateAfterMove)) {\n            this.board = stateAfterMove;\n            this.generateTile();\n        }\n        if (this.lose()) this.setStatus(\"lose\");\n        if (this.win()) this.setStatus(\"win\");\n    }\n    canMoveUp() {\n        return this.moveUp(\"check\");\n    }\n    moveDown(check = \"\") {\n        const stateBeforeMove = this.board.map((row)=>[\n                ...row\n            ]);\n        const stateAfterMove = this.board.map((row)=>[\n                ...row\n            ]);\n        for(let i = 0; i < stateAfterMove.length; i++)for(let j = stateAfterMove.length - 1; j >= 0; j--){\n            if (j > 0 && stateAfterMove[j][i] === 0 && stateAfterMove[j - 1][i] > 0) {\n                stateAfterMove[j][i] = stateAfterMove[j - 1][i];\n                stateAfterMove[j - 1][i] = 0;\n            } else if (j > 1 && stateAfterMove[j][i] === 0 && stateAfterMove[j - 2][i] > 0) {\n                stateAfterMove[j][i] = stateAfterMove[j - 2][i];\n                stateAfterMove[j - 2][i] = 0;\n            } else if (j > 2 && stateAfterMove[j][i] === 0 && stateAfterMove[j - 3][i] > 0) {\n                stateAfterMove[j][i] = stateAfterMove[j - 3][i];\n                stateAfterMove[j - 3][i] = 0;\n            }\n            if (j > 0 && stateAfterMove[j][i] === stateAfterMove[j - 1][i]) {\n                stateAfterMove[j][i] = 2 * stateAfterMove[j][i];\n                stateAfterMove[j - 1][i] = 0;\n                if (check) this.setScore(this.score + stateAfterMove[j][i]);\n            } else if (j > 1 && stateAfterMove[j][i] === stateAfterMove[j - 2][i] && stateAfterMove[j - 1][i] === 0) {\n                stateAfterMove[j][i] = 2 * stateAfterMove[j][i];\n                stateAfterMove[j - 2][i] = 0;\n                if (check) this.setScore(this.score + stateAfterMove[j][i]);\n            } else if (j > 2 && stateAfterMove[j][i] === stateAfterMove[j - 3][i] && stateAfterMove[j - 2][i] === 0 && stateAfterMove[j - 1][i] === 0) {\n                stateAfterMove[j][i] = 2 * stateAfterMove[j][i];\n                stateAfterMove[j - 3][i] = 0;\n                if (check) this.setScore(this.score + stateAfterMove[j][i]);\n            }\n        }\n        if (check) return this.boardsEqual(stateBeforeMove, stateAfterMove);\n        if (!this.boardsEqual(stateBeforeMove, stateAfterMove)) {\n            this.board = stateAfterMove;\n            this.generateTile();\n        }\n        if (this.lose()) this.setStatus(\"lose\");\n        if (this.win()) this.setStatus(\"win\");\n    }\n    canMoveDown() {\n        return this.moveDown(\"check\");\n    }\n    getScore() {\n        return this.score;\n    }\n    setScore(value) {\n        this.score = value;\n    }\n    getState() {\n        return this.board;\n    }\n    setStatus(value) {\n        this.status = value;\n    }\n    generateTile() {\n        let count = 0;\n        while(count < 1){\n            const chanceArray = [\n                2,\n                2,\n                2,\n                2,\n                4,\n                2,\n                2,\n                2,\n                2,\n                2\n            ];\n            const randomRow = this.getRandomNum(0, 3);\n            const randomColumn = this.getRandomNum(0, 3);\n            if (this.board[randomRow][randomColumn] === 0) {\n                this.board[randomRow][randomColumn] = chanceArray[this.getRandomNum(0, 9)];\n                count++;\n            }\n        }\n    }\n    boardsEqual(a, b) {\n        return a.every((row, i)=>row.every((val, j)=>val === b[i][j]));\n    }\n    lose() {\n        return this.canMoveLeft() && this.canMoveRight() && this.canMoveUp() && this.canMoveDown();\n    }\n    win() {\n        return this.board.flat().some((item)=>item === 2048);\n    }\n    getStatus() {\n        return this.status;\n    }\n    getRandomNum(minNum, maxNum) {\n        return Math.floor(Math.random() * (maxNum - minNum + 1)) + minNum;\n    }\n    start() {\n        this.setStatus(\"playing\");\n        this.generateTile();\n        this.generateTile();\n    }\n    restart() {\n        this.setStatus(\"idle\");\n        const resetedBoard = Array.from({\n            length: 4\n        }, ()=>Array(4).fill(0));\n        this.board = resetedBoard;\n    }\n}\n$a5fd07fa01589658$exports = $a5fd07fa01589658$var$Game;\n\n\nconst $09e991522ca7e64e$var$game = new $a5fd07fa01589658$exports();\nconst $09e991522ca7e64e$var$clickButton = document.querySelector(\"button\");\nconst $09e991522ca7e64e$var$score = document.querySelector(\".game-score\");\nconst $09e991522ca7e64e$var$startMessage = document.querySelector(\".message-start\");\nconst $09e991522ca7e64e$var$lostMessage = document.querySelector(\".message-lose\");\nconst $09e991522ca7e64e$var$winMessage = document.querySelector(\".message-win\");\nconst $09e991522ca7e64e$var$tds = Array.from(document.querySelectorAll(\"td\"));\nconst $09e991522ca7e64e$var$field = document.querySelector(\".game-field\");\nconst $09e991522ca7e64e$var$gameOverMessage = document.querySelector(\".game-over\");\nconst $09e991522ca7e64e$var$styleSheet = document.styleSheets[0];\n$09e991522ca7e64e$var$clickButton.addEventListener(\"click\", ()=>{\n    if ($09e991522ca7e64e$var$game.getStatus() === \"idle\") {\n        $09e991522ca7e64e$var$game.start();\n        $09e991522ca7e64e$var$boardRefresh();\n        $09e991522ca7e64e$var$startMessage.classList.add(\"hidden\");\n        $09e991522ca7e64e$var$clickButton.classList.remove(\"start\");\n        $09e991522ca7e64e$var$clickButton.classList.add(\"restart\");\n        $09e991522ca7e64e$var$clickButton.textContent = \"Restart\";\n    } else {\n        $09e991522ca7e64e$var$game.restart();\n        $09e991522ca7e64e$var$boardRefresh();\n        $09e991522ca7e64e$var$game.setScore(0);\n        $09e991522ca7e64e$var$score.textContent = $09e991522ca7e64e$var$game.getScore();\n        $09e991522ca7e64e$var$startMessage.classList.remove(\"hidden\");\n        $09e991522ca7e64e$var$lostMessage.classList.add(\"hidden\");\n        $09e991522ca7e64e$var$field.classList.remove(\"game-field--lose\");\n        $09e991522ca7e64e$var$gameOverMessage.classList.remove(\"game-over--visible\");\n        $09e991522ca7e64e$var$clickButton.classList.remove(\"restart\");\n        $09e991522ca7e64e$var$clickButton.classList.add(\"start\");\n        $09e991522ca7e64e$var$clickButton.textContent = \"Start\";\n        $09e991522ca7e64e$var$tds.forEach((item)=>{\n            item.style.animationName = \"\";\n        });\n        for(let i = $09e991522ca7e64e$var$styleSheet.cssRules.length - 1; i >= 0; i--){\n            const rule = $09e991522ca7e64e$var$styleSheet.cssRules[i];\n            if (rule.type === CSSRule.KEYFRAMES_RULE && window.keyframeNames.includes(rule.name)) $09e991522ca7e64e$var$styleSheet.deleteRule(i);\n        }\n    }\n});\ndocument.addEventListener(\"keydown\", (e)=>{\n    if ($09e991522ca7e64e$var$game.getStatus() === \"playing\") {\n        if (e.key === \"ArrowUp\") {\n            $09e991522ca7e64e$var$game.moveUp();\n            $09e991522ca7e64e$var$boardRefresh();\n            $09e991522ca7e64e$var$score.textContent = $09e991522ca7e64e$var$game.getScore();\n        }\n        if (e.key === \"ArrowDown\") {\n            $09e991522ca7e64e$var$game.moveDown();\n            $09e991522ca7e64e$var$boardRefresh();\n            $09e991522ca7e64e$var$score.textContent = $09e991522ca7e64e$var$game.getScore();\n        }\n        if (e.key === \"ArrowLeft\") {\n            $09e991522ca7e64e$var$game.moveLeft();\n            $09e991522ca7e64e$var$boardRefresh();\n            $09e991522ca7e64e$var$score.textContent = $09e991522ca7e64e$var$game.getScore();\n        }\n        if (e.key === \"ArrowRight\") {\n            $09e991522ca7e64e$var$game.moveRight();\n            $09e991522ca7e64e$var$boardRefresh();\n            $09e991522ca7e64e$var$score.textContent = $09e991522ca7e64e$var$game.getScore();\n        }\n    }\n    if ($09e991522ca7e64e$var$game.getStatus() === \"lose\") {\n        $09e991522ca7e64e$var$field.classList.add(\"game-field--lose\");\n        $09e991522ca7e64e$var$lostMessage.classList.remove(\"hidden\");\n        $09e991522ca7e64e$var$gameOverMessage.classList.add(\"game-over--visible\");\n        $09e991522ca7e64e$var$tds.forEach((item, index)=>{\n            const title = `shake-${index}`;\n            let keyframes = `@keyframes ${title} {`;\n            for(let i = 0; i <= 80; i++){\n                const rot = (i % 2 === 0 ? 2 : -2) * (i % 4 < 2 ? 1 : -1);\n                const tx = (i % 2 === 0 ? 2 : -2) * (i % 4 < 2 ? 1 : -1);\n                keyframes += `${i}% { transform: rotate(${rot}deg)\n        translateX(${tx}px) scale(1); }`;\n            }\n            const randX = (Math.random() - 0.5) * 1000;\n            const randY = (Math.random() - 0.5) * 1000;\n            const rotEnd = (Math.random() - 0.5) * 1440;\n            keyframes += `\n        80% { transform: rotate(0deg) translate(0,0); opacity: 1 }\n        100% { transform: rotate(${rotEnd}deg) translate(${randX}px,\n        ${randY}px); opacity: 0;}\n      `;\n            keyframes += `}`;\n            $09e991522ca7e64e$var$styleSheet.insertRule(keyframes, $09e991522ca7e64e$var$styleSheet.cssRules.length);\n            item.style.animationName = title;\n            item.style.animationDelay = `${Math.random() * 0.2}s`;\n            item.style.animationDuration = `${1.5 + Math.random()}s`;\n            item.style.animationFillMode = \"forwards\";\n        });\n        $09e991522ca7e64e$var$lostMessage.addEventListener(\"click\", ()=>{\n            $09e991522ca7e64e$var$game.restart();\n            $09e991522ca7e64e$var$boardRefresh();\n            $09e991522ca7e64e$var$game.setScore(0);\n            $09e991522ca7e64e$var$score.textContent = $09e991522ca7e64e$var$game.getScore();\n            $09e991522ca7e64e$var$startMessage.classList.remove(\"hidden\");\n            $09e991522ca7e64e$var$lostMessage.classList.add(\"hidden\");\n            $09e991522ca7e64e$var$field.classList.remove(\"game-field--lose\");\n            $09e991522ca7e64e$var$gameOverMessage.classList.remove(\"game-over--visible\");\n            $09e991522ca7e64e$var$clickButton.classList.remove(\"restart\");\n            $09e991522ca7e64e$var$clickButton.classList.add(\"start\");\n            $09e991522ca7e64e$var$clickButton.textContent = \"Start\";\n            $09e991522ca7e64e$var$tds.forEach((item)=>{\n                item.style.animationName = \"\";\n            });\n            for(let i = $09e991522ca7e64e$var$styleSheet.cssRules.length - 1; i >= 0; i--){\n                const rule = $09e991522ca7e64e$var$styleSheet.cssRules[i];\n                if (rule.type === CSSRule.KEYFRAMES_RULE && window.keyframeNames.includes(rule.name)) $09e991522ca7e64e$var$styleSheet.deleteRule(i);\n            }\n        });\n    }\n    if ($09e991522ca7e64e$var$game.getStatus() === \"win\") {\n        $09e991522ca7e64e$var$winMessage.classList.remove(\"hidden\");\n        $09e991522ca7e64e$var$winMessage.addEventListener(\"click\", ()=>{\n            $09e991522ca7e64e$var$game.restart();\n            $09e991522ca7e64e$var$boardRefresh();\n            $09e991522ca7e64e$var$game.setScore(0);\n            $09e991522ca7e64e$var$score.textContent = $09e991522ca7e64e$var$game.getScore();\n            $09e991522ca7e64e$var$startMessage.classList.remove(\"hidden\");\n            $09e991522ca7e64e$var$winMessage.classList.add(\"hidden\");\n            $09e991522ca7e64e$var$clickButton.classList.remove(\"restart\");\n            $09e991522ca7e64e$var$clickButton.classList.add(\"start\");\n            $09e991522ca7e64e$var$clickButton.textContent = \"Start\";\n        });\n    }\n});\n\n\n//# sourceMappingURL=index.4ee4cc6c.js.map\n","'use strict';\n\nwindow.keyframeNames = window.keyframeNames || [];\n\nfunction boardRefresh() {\n  const cells = game.getState().flat();\n\n  tds.forEach((td, index) => {\n    if (cells[index] !== 0) {\n      td.textContent = cells[index];\n      td.className = 'field-cell';\n      td.classList.add(`field-cell--${cells[index]}`);\n    } else {\n      td.textContent = '';\n      td.className = 'field-cell';\n    }\n  });\n}\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\nconst clickButton = document.querySelector('button');\nconst score = document.querySelector('.game-score');\nconst startMessage = document.querySelector('.message-start');\nconst lostMessage = document.querySelector('.message-lose');\nconst winMessage = document.querySelector('.message-win');\nconst tds = Array.from(document.querySelectorAll('td'));\nconst field = document.querySelector('.game-field');\nconst gameOverMessage = document.querySelector('.game-over');\nconst styleSheet = document.styleSheets[0];\n\nclickButton.addEventListener('click', () => {\n  if (game.getStatus() === 'idle') {\n    game.start();\n    boardRefresh();\n    startMessage.classList.add('hidden');\n\n    clickButton.classList.remove('start');\n    clickButton.classList.add('restart');\n    clickButton.textContent = 'Restart';\n  } else {\n    game.restart();\n    boardRefresh();\n    game.setScore(0);\n    score.textContent = game.getScore();\n    startMessage.classList.remove('hidden');\n    lostMessage.classList.add('hidden');\n    field.classList.remove('game-field--lose');\n    gameOverMessage.classList.remove('game-over--visible');\n\n    clickButton.classList.remove('restart');\n    clickButton.classList.add('start');\n    clickButton.textContent = 'Start';\n\n    tds.forEach((item) => {\n      item.style.animationName = '';\n    });\n\n    for (let i = styleSheet.cssRules.length - 1; i >= 0; i--) {\n      const rule = styleSheet.cssRules[i];\n\n      if (\n        rule.type === CSSRule.KEYFRAMES_RULE\n        && window.keyframeNames.includes(rule.name)\n      ) {\n        styleSheet.deleteRule(i);\n      }\n    }\n  }\n});\n\ndocument.addEventListener('keydown', (e) => {\n  if (game.getStatus() === 'playing') {\n    if (e.key === 'ArrowUp') {\n      game.moveUp();\n      boardRefresh();\n      score.textContent = game.getScore();\n    }\n\n    if (e.key === 'ArrowDown') {\n      game.moveDown();\n      boardRefresh();\n      score.textContent = game.getScore();\n    }\n\n    if (e.key === 'ArrowLeft') {\n      game.moveLeft();\n      boardRefresh();\n      score.textContent = game.getScore();\n    }\n\n    if (e.key === 'ArrowRight') {\n      game.moveRight();\n      boardRefresh();\n      score.textContent = game.getScore();\n    }\n  }\n\n  if (game.getStatus() === 'lose') {\n    field.classList.add('game-field--lose');\n    lostMessage.classList.remove('hidden');\n\n    gameOverMessage.classList.add('game-over--visible');\n\n    tds.forEach((item, index) => {\n      const title = `shake-${index}`;\n\n      let keyframes = `@keyframes ${title} {`;\n\n      for (let i = 0; i <= 80; i++) {\n        const rot = (i % 2 === 0 ? 2 : -2) * (i % 4 < 2 ? 1 : -1);\n        const tx = (i % 2 === 0 ? 2 : -2) * (i % 4 < 2 ? 1 : -1);\n\n        keyframes += `${i}% { transform: rotate(${rot}deg)\n        translateX(${tx}px) scale(1); }`;\n      }\n\n      const randX = (Math.random() - 0.5) * 1000;\n      const randY = (Math.random() - 0.5) * 1000;\n      const rotEnd = (Math.random() - 0.5) * 1440;\n\n      keyframes += `\n        80% { transform: rotate(0deg) translate(0,0); opacity: 1 }\n        100% { transform: rotate(${rotEnd}deg) translate(${randX}px,\n        ${randY}px); opacity: 0;}\n      `;\n\n      keyframes += `}`;\n\n      styleSheet.insertRule(keyframes, styleSheet.cssRules.length);\n      item.style.animationName = title;\n      item.style.animationDelay = `${Math.random() * 0.2}s`;\n      item.style.animationDuration = `${1.5 + Math.random()}s`;\n      item.style.animationFillMode = 'forwards';\n    });\n\n    lostMessage.addEventListener('click', () => {\n      game.restart();\n      boardRefresh();\n      game.setScore(0);\n      score.textContent = game.getScore();\n      startMessage.classList.remove('hidden');\n      lostMessage.classList.add('hidden');\n      field.classList.remove('game-field--lose');\n      gameOverMessage.classList.remove('game-over--visible');\n\n      clickButton.classList.remove('restart');\n      clickButton.classList.add('start');\n      clickButton.textContent = 'Start';\n\n      tds.forEach((item) => {\n        item.style.animationName = '';\n      });\n\n      for (let i = styleSheet.cssRules.length - 1; i >= 0; i--) {\n        const rule = styleSheet.cssRules[i];\n\n        if (\n          rule.type === CSSRule.KEYFRAMES_RULE\n          && window.keyframeNames.includes(rule.name)\n        ) {\n          styleSheet.deleteRule(i);\n        }\n      }\n    });\n  }\n\n  if (game.getStatus() === 'win') {\n    winMessage.classList.remove('hidden');\n\n    winMessage.addEventListener('click', () => {\n      game.restart();\n      boardRefresh();\n      game.setScore(0);\n      score.textContent = game.getScore();\n      startMessage.classList.remove('hidden');\n      winMessage.classList.add('hidden');\n\n      clickButton.classList.remove('restart');\n      clickButton.classList.add('start');\n      clickButton.textContent = 'Start';\n    });\n  }\n});\n","'use strict';\nclass Game {\n  constructor(initialState) {\n    this.board\n      = initialState || Array.from({ length: 4 }, () => Array(4).fill(0));\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  moveLeft(check = '') {\n    const stateBeforeMove = this.board.map((row) => [...row]);\n    const stateAfterMove = this.board.map((row) => [...row]);\n\n    for (let i = 0; i < stateAfterMove.length; i++) {\n      for (let j = 0; j < stateAfterMove.length; j++) {\n        if (stateAfterMove[i][j] === 0 && stateAfterMove[i][j + 1] > 0) {\n          stateAfterMove[i][j] = stateAfterMove[i][j + 1];\n          stateAfterMove[i][j + 1] = 0;\n        } else if (stateAfterMove[i][j] === 0 && stateAfterMove[i][j + 2] > 0) {\n          stateAfterMove[i][j] = stateAfterMove[i][j + 2];\n          stateAfterMove[i][j + 2] = 0;\n        } else if (stateAfterMove[i][j] === 0 && stateAfterMove[i][j + 3] > 0) {\n          stateAfterMove[i][j] = stateAfterMove[i][j + 3];\n          stateAfterMove[i][j + 3] = 0;\n        }\n\n        if (stateAfterMove[i][j] === stateAfterMove[i][j + 1]) {\n          stateAfterMove[i][j] = 2 * stateAfterMove[i][j];\n          stateAfterMove[i][j + 1] = 0;\n\n          if (check) {\n            this.setScore(this.score + stateAfterMove[i][j]);\n          }\n        } else if (\n          stateAfterMove[i][j] === stateAfterMove[i][j + 2]\n          && stateAfterMove[i][j + 1] === 0\n        ) {\n          stateAfterMove[i][j] = 2 * stateAfterMove[i][j];\n          stateAfterMove[i][j + 2] = 0;\n\n          if (check) {\n            this.setScore(this.score + stateAfterMove[i][j]);\n          }\n        } else if (\n          stateAfterMove[i][j] === stateAfterMove[i][j + 3]\n          && stateAfterMove[i][j + 1] === 0\n          && stateAfterMove[i][j + 2] === 0\n        ) {\n          stateAfterMove[i][j] = 2 * stateAfterMove[i][j];\n          stateAfterMove[i][j + 3] = 0;\n\n          if (check) {\n            this.setScore(this.score + stateAfterMove[i][j]);\n          }\n        }\n      }\n    }\n\n    if (check) {\n      return this.boardsEqual(stateBeforeMove, stateAfterMove);\n    }\n\n    if (!this.boardsEqual(stateBeforeMove, stateAfterMove)) {\n      this.board = stateAfterMove;\n      this.generateTile();\n    }\n\n    if (this.lose()) {\n      this.setStatus('lose');\n    }\n\n    if (this.win()) {\n      this.setStatus('win');\n    }\n  }\n\n  canMoveLeft() {\n    return this.moveLeft('check');\n  }\n\n  moveRight(check = '') {\n    const stateBeforeMove = this.board.map((row) => [...row]);\n    const stateAfterMove = this.board.map((row) => [...row]);\n\n    for (let i = 0; i < stateAfterMove.length; i++) {\n      for (let j = stateAfterMove.length - 1; j >= 0; j--) {\n        if (stateAfterMove[i][j] === 0 && stateAfterMove[i][j - 1] > 0) {\n          stateAfterMove[i][j] = stateAfterMove[i][j - 1];\n          stateAfterMove[i][j - 1] = 0;\n        } else if (stateAfterMove[i][j] === 0 && stateAfterMove[i][j - 2] > 0) {\n          stateAfterMove[i][j] = stateAfterMove[i][j - 2];\n          stateAfterMove[i][j - 2] = 0;\n        } else if (stateAfterMove[i][j] === 0 && stateAfterMove[i][j - 3] > 0) {\n          stateAfterMove[i][j] = stateAfterMove[i][j - 3];\n          stateAfterMove[i][j - 3] = 0;\n        }\n\n        if (stateAfterMove[i][j] === stateAfterMove[i][j - 1]) {\n          stateAfterMove[i][j] = 2 * stateAfterMove[i][j];\n          stateAfterMove[i][j - 1] = 0;\n\n          if (check) {\n            this.setScore(this.score + stateAfterMove[i][j]);\n          }\n        } else if (\n          stateAfterMove[i][j] === stateAfterMove[i][j - 2]\n          && stateAfterMove[i][j - 1] === 0\n        ) {\n          stateAfterMove[i][j] = 2 * stateAfterMove[i][j];\n          stateAfterMove[i][j - 2] = 0;\n\n          if (check) {\n            this.setScore(this.score + stateAfterMove[i][j]);\n          }\n        } else if (\n          stateAfterMove[i][j] === stateAfterMove[i][j - 3]\n          && stateAfterMove[i][j - 1] === 0\n          && stateAfterMove[i][j - 2] === 0\n        ) {\n          stateAfterMove[i][j] = 2 * stateAfterMove[i][j];\n          stateAfterMove[i][j - 3] = 0;\n\n          if (check) {\n            this.setScore(this.score + stateAfterMove[i][j]);\n          }\n        }\n      }\n    }\n\n    if (check) {\n      return this.boardsEqual(stateBeforeMove, stateAfterMove);\n    }\n\n    if (!this.boardsEqual(stateBeforeMove, stateAfterMove)) {\n      this.board = stateAfterMove;\n      this.generateTile();\n    }\n\n    if (this.lose()) {\n      this.setStatus('lose');\n    }\n\n    if (this.win()) {\n      this.setStatus('win');\n    }\n  }\n\n  canMoveRight() {\n    return this.moveRight('check');\n  }\n\n  moveUp(check = '') {\n    const stateBeforeMove = this.board.map((row) => [...row]);\n    const stateAfterMove = this.board.map((row) => [...row]);\n\n    for (let i = 0; i < stateAfterMove.length; i++) {\n      for (let j = 0; j < stateAfterMove.length; j++) {\n        if (\n          j < stateAfterMove.length - 1\n          && stateAfterMove[j][i] === 0\n          && stateAfterMove[j + 1][i] > 0\n        ) {\n          stateAfterMove[j][i] = stateAfterMove[j + 1][i];\n          stateAfterMove[j + 1][i] = 0;\n        } else if (\n          j < stateAfterMove.length - 2\n          && stateAfterMove[j][i] === 0\n          && stateAfterMove[j + 2][i] > 0\n        ) {\n          stateAfterMove[j][i] = stateAfterMove[j + 2][i];\n          stateAfterMove[j + 2][i] = 0;\n        } else if (\n          j < stateAfterMove.length - 3\n          && stateAfterMove[j][i] === 0\n          && stateAfterMove[j + 3][i] > 0\n        ) {\n          stateAfterMove[j][i] = stateAfterMove[j + 3][i];\n          stateAfterMove[j + 3][i] = 0;\n        }\n\n        if (\n          j < stateAfterMove.length - 1\n          && stateAfterMove[j][i] === stateAfterMove[j + 1][i]\n        ) {\n          stateAfterMove[j][i] = 2 * stateAfterMove[j][i];\n          stateAfterMove[j + 1][i] = 0;\n\n          if (check) {\n            this.setScore(this.score + stateAfterMove[j][i]);\n          }\n        } else if (\n          j < stateAfterMove.length - 2\n          && stateAfterMove[j][i] === stateAfterMove[j + 2][i]\n          && stateAfterMove[j + 1][i] === 0\n        ) {\n          stateAfterMove[j][i] = 2 * stateAfterMove[j][i];\n          stateAfterMove[j + 2][i] = 0;\n\n          if (check) {\n            this.setScore(this.score + stateAfterMove[j][i]);\n          }\n        } else if (\n          j < stateAfterMove.length - 3\n          && stateAfterMove[j][i] === stateAfterMove[j + 3][i]\n          && stateAfterMove[j + 2][i] === 0\n          && stateAfterMove[j + 1][i] === 0\n        ) {\n          stateAfterMove[j][i] = 2 * stateAfterMove[j][i];\n          stateAfterMove[j + 3][i] = 0;\n\n          if (check) {\n            this.setScore(this.score + stateAfterMove[j][i]);\n          }\n        }\n      }\n    }\n\n    if (check) {\n      return this.boardsEqual(stateBeforeMove, stateAfterMove);\n    }\n\n    if (!this.boardsEqual(stateBeforeMove, stateAfterMove)) {\n      this.board = stateAfterMove;\n      this.generateTile();\n    }\n\n    if (this.lose()) {\n      this.setStatus('lose');\n    }\n\n    if (this.win()) {\n      this.setStatus('win');\n    }\n  }\n\n  canMoveUp() {\n    return this.moveUp('check');\n  }\n\n  moveDown(check = '') {\n    const stateBeforeMove = this.board.map((row) => [...row]);\n    const stateAfterMove = this.board.map((row) => [...row]);\n\n    for (let i = 0; i < stateAfterMove.length; i++) {\n      for (let j = stateAfterMove.length - 1; j >= 0; j--) {\n        if (\n          j > 0\n          && stateAfterMove[j][i] === 0\n          && stateAfterMove[j - 1][i] > 0\n        ) {\n          stateAfterMove[j][i] = stateAfterMove[j - 1][i];\n          stateAfterMove[j - 1][i] = 0;\n        } else if (\n          j > 1\n          && stateAfterMove[j][i] === 0\n          && stateAfterMove[j - 2][i] > 0\n        ) {\n          stateAfterMove[j][i] = stateAfterMove[j - 2][i];\n          stateAfterMove[j - 2][i] = 0;\n        } else if (\n          j > 2\n          && stateAfterMove[j][i] === 0\n          && stateAfterMove[j - 3][i] > 0\n        ) {\n          stateAfterMove[j][i] = stateAfterMove[j - 3][i];\n          stateAfterMove[j - 3][i] = 0;\n        }\n\n        if (j > 0 && stateAfterMove[j][i] === stateAfterMove[j - 1][i]) {\n          stateAfterMove[j][i] = 2 * stateAfterMove[j][i];\n          stateAfterMove[j - 1][i] = 0;\n\n          if (check) {\n            this.setScore(this.score + stateAfterMove[j][i]);\n          }\n        } else if (\n          j > 1\n          && stateAfterMove[j][i] === stateAfterMove[j - 2][i]\n          && stateAfterMove[j - 1][i] === 0\n        ) {\n          stateAfterMove[j][i] = 2 * stateAfterMove[j][i];\n          stateAfterMove[j - 2][i] = 0;\n\n          if (check) {\n            this.setScore(this.score + stateAfterMove[j][i]);\n          }\n        } else if (\n          j > 2\n          && stateAfterMove[j][i] === stateAfterMove[j - 3][i]\n          && stateAfterMove[j - 2][i] === 0\n          && stateAfterMove[j - 1][i] === 0\n        ) {\n          stateAfterMove[j][i] = 2 * stateAfterMove[j][i];\n          stateAfterMove[j - 3][i] = 0;\n\n          if (check) {\n            this.setScore(this.score + stateAfterMove[j][i]);\n          }\n        }\n      }\n    }\n\n    if (check) {\n      return this.boardsEqual(stateBeforeMove, stateAfterMove);\n    }\n\n    if (!this.boardsEqual(stateBeforeMove, stateAfterMove)) {\n      this.board = stateAfterMove;\n      this.generateTile();\n    }\n\n    if (this.lose()) {\n      this.setStatus('lose');\n    }\n\n    if (this.win()) {\n      this.setStatus('win');\n    }\n  }\n\n  canMoveDown() {\n    return this.moveDown('check');\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  setScore(value) {\n    this.score = value;\n  }\n\n  getState() {\n    return this.board;\n  }\n\n  setStatus(value) {\n    this.status = value;\n  }\n\n  generateTile() {\n    let count = 0;\n\n    while (count < 1) {\n      const chanceArray = [2, 2, 2, 2, 4, 2, 2, 2, 2, 2];\n      const randomRow = this.getRandomNum(0, 3);\n      const randomColumn = this.getRandomNum(0, 3);\n\n      if (this.board[randomRow][randomColumn] === 0) {\n        this.board[randomRow][randomColumn]\n          = chanceArray[this.getRandomNum(0, 9)];\n        count++;\n      }\n    }\n  }\n\n  boardsEqual(a, b) {\n    return a.every((row, i) => row.every((val, j) => val === b[i][j]));\n  }\n\n  lose() {\n    return (\n      this.canMoveLeft()\n      && this.canMoveRight()\n      && this.canMoveUp()\n      && this.canMoveDown()\n    );\n  }\n\n  win() {\n    return this.board.flat().some((item) => item === 2048);\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  getRandomNum(minNum, maxNum) {\n    return Math.floor(Math.random() * (maxNum - minNum + 1)) + minNum;\n  }\n\n  start() {\n    this.setStatus('playing');\n    this.generateTile();\n    this.generateTile();\n  }\n\n  restart() {\n    this.setStatus('idle');\n\n    const resetedBoard = Array.from({ length: 4 }, () => Array(4).fill(0));\n\n    this.board = resetedBoard;\n  }\n}\n\nmodule.exports = Game;\n"],"names":["$09e991522ca7e64e$var$boardRefresh","cells","$09e991522ca7e64e$var$game","getState","flat","$09e991522ca7e64e$var$tds","forEach","td","index","textContent","className","classList","add","window","keyframeNames","constructor","initialState","board","Array","from","length","fill","score","status","moveLeft","check","stateBeforeMove","map","row","stateAfterMove","i","j","setScore","boardsEqual","generateTile","lose","setStatus","win","canMoveLeft","moveRight","canMoveRight","moveUp","canMoveUp","moveDown","canMoveDown","getScore","value","count","chanceArray","randomRow","getRandomNum","randomColumn","a","b","every","val","some","item","getStatus","minNum","maxNum","Math","floor","random","start","restart","resetedBoard","$09e991522ca7e64e$var$clickButton","document","querySelector","$09e991522ca7e64e$var$score","$09e991522ca7e64e$var$startMessage","$09e991522ca7e64e$var$lostMessage","$09e991522ca7e64e$var$winMessage","querySelectorAll","$09e991522ca7e64e$var$field","$09e991522ca7e64e$var$gameOverMessage","$09e991522ca7e64e$var$styleSheet","styleSheets","addEventListener","remove","style","animationName","cssRules","rule","type","CSSRule","KEYFRAMES_RULE","includes","name","deleteRule","e","key","title","keyframes","rot","tx","randX","randY","rotEnd","insertRule","animationDelay","animationDuration","animationFillMode"],"version":3,"file":"index.4ee4cc6c.js.map"}